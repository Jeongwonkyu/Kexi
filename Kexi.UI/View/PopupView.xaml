<base:BaseControl x:TypeArguments="viewModel:PopupViewModel" x:Class="Kexi.UI.View.PopupView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:gif="http://wpfanimatedgif.codeplex.com"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:view1="clr-namespace:Kexi.View;assembly=Kexi"
                   xmlns:viewModel="clr-namespace:Kexi.ViewModel;assembly=Kexi"
                  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                   xmlns:view="clr-namespace:Kexi.UI.View"
                   xmlns:base="clr-namespace:Kexi.UI.Base"
                   xmlns:converters="clr-namespace:Kexi.UI.Converters"
                   x:Name="popupView"
                   d:DesignHeight="500"
                   d:DesignWidth="300"
                            d:DataContext="{d:DesignInstance viewModel:PopupViewModel}"
                   mc:Ignorable="d">
                   

    <Popup x:Name="popup"
           AllowsTransparency="True"
           IsOpen="{Binding IsOpen, Mode=TwoWay}"
           PopupAnimation="{Binding Path=Options.PopupAnimation}"
           StaysOpen="False">

        <Border x:Name="OuterBorder"
                Margin="4"
                Background="{DynamicResource ListerBackground}"
                BorderBrush="{DynamicResource KexSelectionBorderBrush}"
                BorderThickness="1 1 1 1"
                CornerRadius="0 0 2 2"
                Opacity="0.96"
                Padding="0"
                >

            <Grid x:Name="grid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid x:Name="header"
                      Grid.Row="0" Margin="0"
                      Visibility="{Binding Path=TitleVisible, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Margin="6 0 0 0">
                        <Rectangle Width="12" Height="12" Fill="{DynamicResource ListerForeground}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{Binding HeaderIcon}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <Border Grid.Column="1"
                            BorderThickness="1"
                            CornerRadius="4">
                        <Label x:Name="head"
                               VerticalContentAlignment="Center"
                               Background="Transparent"
                               Content="{Binding Title}"
                               FontWeight="Bold"
                               Foreground="{DynamicResource ListerForeground}" />
                    </Border>
                    <Button Grid.Column="3"
                            Margin="2 5 6 0"
                            Background="{DynamicResource ListerBackground}"
                            BorderBrush="{DynamicResource ListerBackground}"
                            Command="{Binding Path=CloseCommand, ElementName=popupView}"
                            Focusable="False"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Width="10" Height="10" Fill="{DynamicResource ListerForeground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_close}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </StackPanel>
                    </Button>
                </Grid>

                <Border x:Name="TitleTextBorder" Visibility="Collapsed" Margin="0 0 3 0" Padding="0" Grid.Row="1">
                    <TextBox x:Name="TitleText" MinWidth="243"
                             TextWrapping="WrapWithOverflow"
                             Margin="2 0 0 -3"
                             VerticalAlignment="Bottom"
                             Background="{DynamicResource InputTextBackground}"
                             Foreground="{DynamicResource InputTextForeground}"
                             CaretBrush="{DynamicResource InputTextForeground}"
                             SelectionBrush="{DynamicResource KexSelectionBackground}"
                             Style="{StaticResource TextboxRounded}">
                        <Binding Path="Text" UpdateSourceTrigger="PropertyChanged" />
                    </TextBox>
                </Border>

                <Border Grid.Row="2"
                        BorderThickness="1"
                        Margin="0"
                        CornerRadius="0"
                        Padding="0">
                    <ListView x:Name="_listView"
                              Margin="0 1 0 0"
                              Background="{DynamicResource ListerBackground}"
                              BorderBrush="{DynamicResource BorderBrush}"
                              BorderThickness="0"
                              Foreground="{DynamicResource ListerForeground}"
                              IsSynchronizedWithCurrentItem="True"
                              ItemContainerStyle="{StaticResource ListViewItemTextInputStyle}"
                              ItemsSource="{Binding ItemsView}"
                              MouseLeftButtonUp="_listView_OnMouseLeftButtonUp"
                              SelectionChanged="_listView_OnSelectionChanged"
                              VirtualizingPanel.CacheLength="30"
                              VirtualizingPanel.IsVirtualizing="true"
                              VirtualizingPanel.IsVirtualizingWhenGrouping="true"
                              VirtualizingPanel.ScrollUnit="Pixel"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              >
                    </ListView>
                </Border>

            </Grid>
        </Border>
    </Popup>

</base:BaseControl>
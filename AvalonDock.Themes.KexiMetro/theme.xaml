<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:converter="clr-namespace:Kexi.Converter;assembly=Kexi">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    <converter:AnyToHeightConverter x:Key="AnyToHeightConverter" />

    <Style x:Key="AvalonDock_ThemeMetro_ToolButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="Transparent" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor31}" />
                <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor10}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor31}" />
                <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor10}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AvalonDock_ThemeMetro_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="Transparent" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor31}" />
                <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor10}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
      <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                CornerRadius="0,3,3,0"                                
                                Padding="0,4,0,0" x:Name="tabiOuterBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="tabiBorder"
                                        Grid.ColumnSpan="2"
                                        Background="Transparent" />
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding DocumentHeaderTemplate,
                                                                            Mode=OneWay,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                                           Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector,
                                                                                    Mode=OneWay,
                                                                                    RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                                                   Mode=FindAncestor}}" />
                                <Button x:Name="DocumentCloseButton"
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding Path=LayoutItem.CloseCommand,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                        UIElement.Visibility="Hidden">
                                    <Image x:Name="PART_ImgPinClose" Source="Images/PinClose.png" />
                                </Button>
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                            <Setter TargetName="tabiOuterBorder" Property="BorderBrush" Value="{DynamicResource ActiveTabDecorator}" />
                            <Setter TargetName="tabiOuterBorder" Property="BorderThickness" Value="0 2 0 0" />
                        </DataTrigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=CanClose}" Value="false">
                            <Setter TargetName="DocumentCloseButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger SourceName="DocumentCloseButton" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

   <Style x:Key="AvalonDock_ThemeMetro_DocumentPaneControlStyle"  TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                  <Grid ClipToBounds="true" 
                        SnapsToDevicePixels="true"
                        KeyboardNavigation.TabNavigation="Local">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding Workspace.Docking.Files, Converter={StaticResource AnyToHeightConverter}}" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--Following border is required to catch mouse events-->
                    <Border Grid.RowSpan="2" BorderBrush="Red" />
                    <Grid Panel.ZIndex="1" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!--Replacing xcad:DocumentPaneTabPanel for a WrapPanel-->
                        <WrapPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  IsItemsHost="true"
                                  Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <Border x:Name="ContentPanel"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Margin="0"
                            Padding="0"
                            Background="{DynamicResource ListerStatusbarBackground}"
                            Grid.Column="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            Grid.Row="1"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                  <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="1">
                      <Setter Property="Visibility" Value="Collapsed"  />
                      <Setter Property="Background" Value="Red"  />
                  </DataTrigger>-->
                  </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
              <Style TargetType="{x:Type TabItem}">
                  <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                  <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                  <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                  <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                  <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                  <Setter Property="Padding" Value="2,0,2,0" />
                  <Setter Property="Margin" Value="0,2,0,0" />
                  <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                          <Grid SnapsToDevicePixels="true" x:Name="GridBorder">
                              <Border x:Name="Bd"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Background="{TemplateBinding Background}"
                                      Padding="{TemplateBinding Padding}"
                                      CornerRadius="3 3 0 0"
                                      >
                                <ContentPresenter x:Name="Content"
                                                  Margin="0"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                              </Border>
                          </Grid>
                          <ControlTemplate.Triggers>
                              <Trigger Property="Selector.IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter Property="Margin" Value="0,0,0,-2" />
                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,3" />
                                  <Setter Property="Background" Value="{DynamicResource ListerStatusbarBackground}" TargetName="Bd"/>
                              </Trigger>
                              <Trigger Property="Selector.IsSelected" Value="False">
                                  <Setter Property="Background" Value="{DynamicResource ListerBackground}" TargetName="Bd"/>
                              </Trigger>
                              <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                              Value="true" />
                                    <Condition Property="Selector.IsSelected"
                                              Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Panel.ZIndex"
                                        Value="0" />
                              </MultiTrigger>
                              <Trigger Property="IsEnabled"
                                      Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                              </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                  </Setter>
              </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                  <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
              </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                  <avalonDockControls:LayoutDocumentControl Model="{Binding}" />
              </DataTemplate>
            </Setter.Value>
        </Setter>
      </Style>
    <Style x:Key="AvalonDock_ThemeMetro_AnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabControl.TabStripPlacement" Value="Bottom" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Control.Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          UIElement.ClipToBounds="true"
                          UIElement.SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border x:Name="ContentPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Control.Padding}"
                                              ContentSource="SelectedContent"
                                              UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel x:Name="HeaderPanel"
                                                                   Grid.Row="1"
                                                                   Margin="0,0,2,2"
                                                                   IsItemsHost="true"
                                                                   KeyboardNavigation.TabIndex="1"
                                                                   ZIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                            <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Control.Background" Value="Transparent" />
                    <Setter Property="Control.BorderBrush" Value="Transparent" />
                    <Setter Property="Control.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                    <Setter Property="TabItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FrameworkElement.ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid UIElement.SnapsToDevicePixels="true">
                                    <Border x:Name="Bd"
                                            Margin="4"
                                            Background="{TemplateBinding Control.Background}"
                                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                                            BorderThickness="0,2,0,0"
                                            Padding="{TemplateBinding Control.Padding}">
                                        <ContentPresenter x:Name="Content"
                                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="true"
                                                          UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                                        <Setter Property="Control.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="UIElement.IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor4}" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="false">
                                        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor13}" />
                                        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor9}" />
                                        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabControl.ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Eigenschaften, Treeview Header  -->
    <Style TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Padding="0,1,0,1"
                            Visibility="{Binding Content.Content.Workspace.Options.AnchorablesMoveable,
                                                 Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter x:Name="Header"
                                                  Margin="2,0,0,0"
                                                  Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" />
                            </avalonDockControls:DropDownControlArea>
                            <avalonDockControls:DropDownButton x:Name="MenuDropDownButton"
                                                               Grid.Column="1"
                                                               VerticalAlignment="Center"
                                                               DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                                               DropDownContextMenuDataContext="{Binding Path=LayoutItem,
                                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                               Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
                                                               ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                                               UIElement.Focusable="false">
                                <Image x:Name="PART_ImgMenuPin" Source="Images/PinMenu.png" />
                            </avalonDockControls:DropDownButton>
                            <Button x:Name="PART_AutoHidePin"
                                    Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=LayoutItem.AutoHideCommand,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                    UIElement.Focusable="false"
                                    UIElement.Visibility="{Binding Path=IsEnabled,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Mode=OneWay,
                                                                   Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image x:Name="PART_ImgAutoHidePin" Source="Images/PinAutoHide.png" />
                            </Button>
                            <Button x:Name="PART_HidePin"
                                    Grid.Column="3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=LayoutItem.HideCommand,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                    UIElement.Focusable="false"
                                    UIElement.Visibility="{Binding Path=IsEnabled,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Mode=OneWay,
                                                                   Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image x:Name="PART_ImgHidePin" Source="Images/PinClose.png" />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                            <Setter Property="Control.BorderThickness" Value="0,3,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Image.Source" Value="Images/PinAutoHide_Dark.png" />
                            <Setter TargetName="PART_ImgHidePin" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="MenuDropDownButton" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_AutoHidePin" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Image.Source" Value="Images/PinAutoHide_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_HidePin" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgHidePin" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="4"
                                MinHeight="4"
                                Orientation="{Binding Path=Model.Side,
                                                      RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl},
                                                                                     Mode=FindAncestor},
                                                      Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <FrameworkElement.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </FrameworkElement.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDock_ThemeMetro_AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border x:Name="Bd"
                Margin="4"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="0,2,0,0"
                Padding="2">
            <ContentPresenter Content="{Binding Model,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                        Mode=OneWay,
                                                        RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                       Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                Mode=OneWay,
                                                                RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                               Mode=FindAncestor}}"
                              TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Right">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,0,0,2" />
            </Trigger>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Bottom">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="avalonDockControls:LayoutAnchorControl.Side" Value="Top">
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,0,0,2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsMouseOver" Value="true" />
                    <Condition Property="Selector.IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor4}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer" UIElement.Opacity="0.9">
                        <Path x:Name="PART_PreviewBox"
                              Fill="AliceBlue"
                              Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                              StrokeThickness="2" />
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <Image x:Name="PART_DockingManagerDropTargetLeft"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Source="Images/DockAnchorableLeft.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Source="Images/DockAnchorableRight.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Bottom"
                                   Source="Images/DockAnchorableBottom.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Source="Images/DockAnchorableTop.PNG"
                                   Stretch="None" />
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="112"
                                  Height="112"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Margin="0,0.5,0,-0.5"
                                       Source="Images/DockPaneEmpty.png"
                                       Stretch="None" />
                                <Border Name="PART_AnchorablePaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="0,3.5,0, 0">
                                    <Image Source="Images/DockDocumentAsAnchorableTop.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentAsAnchorableLeft.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="0,0.5,0,0">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentAsAnchorableRight.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="0,-0.5,0,0">
                                    <Image Source="Images/DockDocumentAsAnchorableBottom.png" Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets">
                            <Grid Width="112"
                                  Height="112"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Source="Images/DockPaneEmpty.PNG"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentTop.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentLeft.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentRight.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="2">
                                    <Image Source="Images/DockDocumentBottom.png" Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="184"
                                  Height="184"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="5"
                                       Grid.ColumnSpan="5"
                                       Source="Images/DockPaneLargeEmpty.PNG"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
                                        Grid.Row="0"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentAsAnchorableTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetTop"
                                        Grid.Row="1"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
                                        Grid.Row="2"
                                        Grid.Column="0">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentAsAnchorableLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft"
                                        Grid.Row="2"
                                        Grid.Column="1">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto"
                                        Grid.Row="2"
                                        Grid.Column="2">
                                    <Image Source="Images/DockDocumentInside.png" Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight"
                                        Grid.Row="2"
                                        Grid.Column="3">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
                                        Grid.Row="2"
                                        Grid.Column="4">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentAsAnchorableRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom"
                                        Grid.Row="3"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
                                        Grid.Row="4"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="Images/DockDocumentAsAnchorableBottom.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource,
                                    Converter={StaticResource NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter TargetName="title" Property="FrameworkElement.Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeMetro_DocumentTitleTemplate">
        <TextBlock VerticalAlignment="Center"
                   Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeMetro_AnchorableTitleTemplate">
        <TextBlock VerticalAlignment="Center"
                   Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeMetro_IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AvalonDock_ThemeMetro_AnchorableContextMenu">
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem Command="{Binding Path=HideCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="AvalonDock_ThemeMetro_DocumentContextMenu">
        <MenuItem Command="{Binding Path=CloseCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Close}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" />
        <MenuItem Command="{Binding Path=NewHorizontalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Width="14"
                       Source="Images/HTabGroup.png"
                       Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="{Binding Path=NewVerticalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Width="14"
                       Source="Images/VTabGroup.png"
                       Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="{Binding Path=MoveToNextTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=MoveToPreviousTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
                  UIElement.Visibility="{Binding Path=IsEnabled,
                                                 RelativeSource={RelativeSource Self},
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <Style TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="avalonDock:DockingManager.DocumentPaneControlStyle" Value="{StaticResource AvalonDock_ThemeMetro_DocumentPaneControlStyle}" />
        <Setter Property="avalonDock:DockingManager.AnchorablePaneControlStyle" Value="{StaticResource AvalonDock_ThemeMetro_AnchorablePaneControlStyle}" />
        <Setter Property="avalonDock:DockingManager.AnchorSideTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorSideTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorGroupTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorGroupTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorTemplate}" />
        <Setter Property="avalonDock:DockingManager.DocumentHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.DocumentTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentTitleTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableTitleTemplate" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableTitleTemplate}" />
        <Setter Property="avalonDock:DockingManager.AnchorableContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_AnchorableContextMenu}" />
        <Setter Property="avalonDock:DockingManager.DocumentContextMenu" Value="{StaticResource AvalonDock_ThemeMetro_DocumentContextMenu}" />
        <Setter Property="avalonDock:DockingManager.DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource AvalonDock_ThemeMetro_DocumentHeaderTemplate}" />
        <Setter Property="avalonDock:DockingManager.IconContentTemplate" Value="{StaticResource AvalonDock_ThemeMetro_IconContentTemplate}" />
        <Setter Property="avalonDock:DockingManager.GridSplitterWidth" Value="5" />
        <Setter Property="avalonDock:DockingManager.GridSplitterHeight" Value="5" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Padding="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="0" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Options.AnchorablesWidth}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding Options.AnchorablesWidth}" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Row="0"
                                              Grid.Column="1"
                                              Content="{TemplateBinding avalonDock:DockingManager.TopSidePanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="0"
                                              Content="{TemplateBinding avalonDock:DockingManager.LeftSidePanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="1"
                                              Content="{TemplateBinding avalonDock:DockingManager.LayoutRootPanel}" />
                            <ContentPresenter x:Name="PART_AutoHideArea"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                                              Content="{TemplateBinding avalonDock:DockingManager.AutoHideWindow}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="2"
                                              Content="{TemplateBinding avalonDock:DockingManager.RightSidePanel}" />
                            <ContentPresenter Grid.Row="2"
                                              Grid.Column="1"
                                              Content="{TemplateBinding avalonDock:DockingManager.BottomSidePanel}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="kexiglassBrush" Color="{Binding Color, Source={x:Static SystemParameters.WindowGlassBrush}}" />

    <Style TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Control.Background" Value="{StaticResource WindowBackgroundBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Margin="2" Background="{TemplateBinding Control.Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                                            Mode=OneWay,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                                           Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                                    Mode=OneWay,
                                                                                    RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager},
                                                                                                                   Mode=FindAncestor}}" />
                                <avalonDockControls:DropDownControlArea Grid.Column="0"
                                                                        DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                                        DropDownContextMenuDataContext="{Binding Path=Model,
                                                                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header" Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor16}">
                                <avalonDockControls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter Grid.Row="1"
                                              Content="{Binding LayoutItem.View,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              FlowDirection="{TemplateBinding FrameworkElement.FlowDirection}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="24"
                                    CornerRadius="0"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10"
                                    ShowSystemMenu="false" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="bd"
                                        Width="5"
                                        VerticalAlignment="Stretch"
                                        Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor5}" />
                                <Border x:Name="Header"
                                        Grid.Column="1"
                                        Padding="2,0,2,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{Binding Model.RootDocument,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector,
                                                                                            RelativeSource={RelativeSource TemplatedParent}}" />
                                        <avalonDockControls:DropDownButton x:Name="ContextMenuDropdownButton"
                                                                           Grid.Column="1"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           HorizontalContentAlignment="Center"
                                                                           VerticalContentAlignment="Center"
                                                                           shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                                           DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu,
                                                                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                                                           DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem,
                                                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
                                                                           ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}"
                                                                           UIElement.Focusable="false">
                                            <Image x:Name="PART_ImgPinMenu"
                                                   Width="13"
                                                   Source="Images/PinMenu.png"
                                                   Stretch="None" />
                                        </avalonDockControls:DropDownButton>
                                        <Button x:Name="PART_PinMaximize"
                                                Grid.Column="2"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding IsMaximized,
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinMaximize"
                                                   Width="13"
                                                   Source="Images/PinMaximize.png" />
                                        </Button>
                                        <Button x:Name="PART_PinRestore"
                                                Grid.Column="2"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding IsMaximized,
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinRestore"
                                                   Width="13"
                                                   Source="Images/PinRestore.png" />
                                        </Button>
                                        <Button x:Name="PART_PinClose"
                                                Grid.Column="3"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{Binding Path=RootDocumentLayoutItem.CloseCommand,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding Path=IsEnabled,
                                                                               RelativeSource={RelativeSource Self},
                                                                               Mode=OneWay,
                                                                               Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Width="13"
                                                   Source="Images/PinClose.png" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1"
                                                  Grid.ColumnSpan="2"
                                                  Content="{TemplateBinding ContentControl.Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Window.WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Border.Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}" Value="True">
                            <Setter TargetName="bd" Property="Border.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                            <Setter TargetName="Header" Property="Border.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
                        </DataTrigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Control.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="24"
                                    CornerRadius="0"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Control.Background}"
                                BorderBrush="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}"
                                        Padding="2,0,2,0"
                                        TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border UIElement.Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate,
                                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector,
                                                                                                    RelativeSource={RelativeSource TemplatedParent}}" />
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>
                                        <avalonDockControls:DropDownButton x:Name="SinglePaneContextMenu"
                                                                           Grid.Column="1"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           HorizontalContentAlignment="Center"
                                                                           VerticalContentAlignment="Center"
                                                                           shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                                           DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                                                           DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem,
                                                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
                                                                           ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                                                           UIElement.Focusable="false"
                                                                           UIElement.Visibility="{Binding Path=Model.IsSinglePane,
                                                                                                          RelativeSource={RelativeSource TemplatedParent},
                                                                                                          Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinMenu"
                                                   Width="13"
                                                   Source="Images/PinMenu.png"
                                                   Stretch="None" />
                                        </avalonDockControls:DropDownButton>
                                        <Button x:Name="PART_PinMaximize"
                                                Grid.Column="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                HorizontalContentAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding IsMaximized,
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinMaximize"
                                                   Width="13"
                                                   Source="Images/PinMaximize.png" />
                                        </Button>
                                        <Button x:Name="PART_PinRestore"
                                                Grid.Column="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding IsMaximized,
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinRestore"
                                                   Width="13"
                                                   Source="Images/PinRestore.png" />
                                        </Button>
                                        <Button x:Name="PART_PinClose"
                                                Grid.Column="3"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                                Command="{Binding HideWindowCommand,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                                UIElement.Focusable="false"
                                                UIElement.Visibility="{Binding Path=IsEnabled,
                                                                               RelativeSource={RelativeSource Self},
                                                                               Mode=OneWay,
                                                                               Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Width="13"
                                                   Source="Images/PinClose.png" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding ContentControl.Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Window.WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Border.Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter TargetName="Header" Property="Border.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Dark.png" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Dark.png" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Image.Source" Value="Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Image.Source" Value="Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinRestore" Property="Image.Source" Value="Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ImgPinClose" Property="Image.Source" Value="Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="avalonDockControls:LayoutAutoHideWindowControl.Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" />
    </Style>

    <Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemHoverFill" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFF1FBFF" />
        <GradientStop Offset="1" Color="#FFD5F1FE" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFD9F4FF" />
        <GradientStop Offset="1" Color="#FF9BDDFB" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedInactiveFill" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFEEEDED" />
        <GradientStop Offset="1" Color="#FFDDDDDD" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedHoverFill" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFEAF9FF" />
        <GradientStop Offset="1" Color="#FFC9EDFD" />
    </LinearGradientBrush>

    <Style x:Key="AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Control.BorderBrush" Value="Transparent" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Padding" Value="5,0,5,0" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            UIElement.SnapsToDevicePixels="true">
                        <Border x:Name="InnerBorder" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="UpperHighlight"
                                           Fill="#75FFFFFF"
                                           UIElement.Visibility="Collapsed" />
                                <ContentPresenter Grid.RowSpan="2"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                  UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="Control.Background" Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                            <Setter Property="Control.Background" Value="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Window.SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Window.ResizeMode" Value="NoResize" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    GlassFrameThickness="4"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding SelectedDocument.LayoutElement.IconSource,
                                                                Converter={StaticResource NullToDoNothingConverter}}"
                                               Stretch="None"
                                               UIElement.Visibility="{Binding SelectedDocument.LayoutElement.IconSource,
                                                                              Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBlock Grid.Column="1"
                                                   Margin="4,0,0,0"
                                                   VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding SelectedDocument.LayoutElement.Title}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <TextBlock VerticalAlignment="Center"
                                               Text="{Binding SelectedDocument.LayoutElement.Description}"
                                               TextTrimming="CharacterEllipsis" />
                                </Grid>
                                <Grid Margin="5" Row="2">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding SelectedDocument.LayoutElement.ToolTip}" />
                                </Grid>
                                <Border Grid.Row="1"
                                        MinHeight="200"
                                        Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor7}"
                                        BorderBrush="{DynamicResource AvalonDock_ThemeMetro_BaseColor11}"
                                        BorderThickness="0,1,0,0">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Margin="0,3,0,4"
                                                       FontWeight="Bold"
                                                       Text="Active Tool Windows" />
                                            <ListBox Grid.Row="1"
                                                     MaxHeight="400"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}"
                                                     ItemsSource="{Binding Anchorables}"
                                                     SelectedItem="{Binding SelectedAnchorable,
                                                                            Mode=TwoWay}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None" />
                                                            <TextBlock Grid.Column="1"
                                                                       Margin="4,0,0,0"
                                                                       Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Margin="5" Column="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Margin="0,3,0,4"
                                                       FontWeight="Bold"
                                                       Text="Active Files" />
                                            <ListBox Grid.Row="1"
                                                     MaxHeight="400"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     ItemContainerStyle="{StaticResource AvalonDock_ThemeMetro_NavigatorWindowListBoxItemStyle}"
                                                     ItemsSource="{Binding Documents}"
                                                     SelectedItem="{Binding SelectedDocument,
                                                                            Mode=TwoWay}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None" />
                                                            <TextBlock Grid.Column="1"
                                                                       Margin="4,0,0,0"
                                                                       Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>